{"version":3,"sources":["themes.ts","components/button/button.styles.tsx","components/button/button.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["lightTheme","borderRadius","colors","main","secondary","Button","styled","button","props","theme","label","Wrapper","Title","h1","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAEaA,EAA2B,CACtCC,aAAc,MAEdC,OAAQ,CACNC,KAAM,QACNC,UAAW,UCLFC,EAASC,IAAOC,OAAV,4IACG,SAACC,GAAD,OAAWA,EAAMC,MAAMP,OAAOE,aACzC,SAACI,GAAD,OAAWA,EAAMC,MAAMP,OAAOC,QACnB,SAACK,GAAD,OAAWA,EAAMC,MAAMP,OAAOE,aACjC,SAACI,GAAD,OAAWA,EAAMC,MAAMR,gB,OCC7BI,EAAS,SAAC,GAA4B,IAA1BK,EAAyB,EAAzBA,MACvB,OAAO,cAAC,EAAD,UAAgBA,KCHnBC,EAAUL,IAAOH,KAAV,8FACS,SAACK,GAAD,OAAWA,EAAMC,MAAMP,OAAOC,QAK9CS,EAAQN,IAAOO,GAAV,uFAGA,SAACL,GAAD,OAAWA,EAAMC,MAAMP,OAAOE,aAG5BU,EAAM,WACjB,OACE,cAAC,IAAD,CAAeL,MAAOT,EAAtB,SACE,eAACW,EAAD,CAASI,UAAU,MAAnB,UACE,cAACH,EAAD,CAAOG,UAAU,aAAjB,0BACA,cAAC,EAAD,CAAQL,MAAO,qBCRRM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c62a2b68.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components'\n\nexport const lightTheme: DefaultTheme = {\n  borderRadius: '4px',\n\n  colors: {\n    main: 'white',\n    secondary: 'black',\n  },\n}\n\nexport const darkTheme: DefaultTheme = {\n  borderRadius: '5px',\n\n  colors: {\n    main: 'black',\n    secondary: 'white',\n  },\n}\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  background-color: ${(props) => props.theme.colors.secondary};\n  color: ${(props) => props.theme.colors.main};\n  border: 1px solid ${(props) => props.theme.colors.secondary};\n  border-radius: ${(props) => props.theme.borderRadius};\n  padding: 4px 12px;\n`\n","import React from 'react'\nimport * as Styled from './button.styles'\n\ninterface buttonProps {\n  label: string\n}\n\nexport const Button = ({ label }: buttonProps) => {\n  return <Styled.Button>{label}</Styled.Button>\n}\n","import React from 'react'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { lightTheme } from './themes'\nimport { Button } from './components/button/button'\n\nconst Wrapper = styled.main`\n  background-color: ${(props) => props.theme.colors.main};\n  margin: 0 auto;\n  max-width: 900px;\n`\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: ${(props) => props.theme.colors.secondary};\n`\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <Wrapper className='App'>\n        <Title className='App-header'>iamtomnewton</Title>\n        <Button label={'test woooo'} />\n      </Wrapper>\n    </ThemeProvider>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}